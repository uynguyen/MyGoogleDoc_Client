/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CustomComponents;

import EditorKits.AdvancedHTMLEditorKit;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JTextPane;
import javax.swing.JToolTip;
import javax.swing.text.Caret;
import javax.swing.text.DefaultEditorKit;
import net.java.balloontip.BalloonTip;
import net.java.balloontip.utils.FadingUtils;

/**
 *
 * @author Vin
 */
public class StyleTextPane extends JTextPane {

    /**
     * Creates new form StyleTextPane
     */
    public StyleTextPane() {
        super();
        initComponents();
       
    }

    protected Caret addCaret(UserCaret c){
        c.install(this);
       return caretMap.put(c.getUserName(), c);
    }
    
    protected  Caret removeCaret(UserCaret c){
        c.deinstall(this);
      return  caretMap.remove(c);
    }
    
    private void initCarets(){
        UserCaret c = new UserCaret();  
        c.setBlinkRate(500);
        c.setUserName("God's Shit");        
        c.setCaretColor(Color.yellow);
        addCaret(c);
        c.setDot(4);
        
        
        c = new UserCaret();  
        c.setBlinkRate(500);
        c.setUserName("God's food");
         addCaret(c);
    }
    
    private void drawCarets(Graphics g)
    {
        caretMap.keySet().stream().forEach((key)->{
          
           
        });
    }
    
    @Override
    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.
      //  drawCarets(g);
       
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setContentType("text/html"); // NOI18N
        setEditorKit(new AdvancedHTMLEditorKit());
        setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        setText("<html>\r\n  <head>\r\n\r\n  </head>\r\n  <body>\r\n    <p style=\"margin-top: 0\">\r\n      \rHey hey hey\n    </p>\r\n  </body>\r\n</html>\r\n");
        setCaretColor(new java.awt.Color(102, 102, 255));
        setDoubleBuffered(true);
        setMargin(new java.awt.Insets(30, 30, 30, 30));
        setSelectionColor(new java.awt.Color(255, 255, 51));
        addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                formCaretUpdate(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                formCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
    }// </editor-fold>//GEN-END:initComponents

    private void formCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_formCaretUpdate
        // TODO add your handling code here:
        drawCarets(this.getGraphics());
    }//GEN-LAST:event_formCaretUpdate

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here: 
        drawCarets(this.getGraphics());
    }//GEN-LAST:event_formMouseMoved

    private void formCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_formCaretPositionChanged
        // TODO add your handling code here:
        BalloonTip jTooltip = new BalloonTip(this, "Shut up");
        ActionListener finishedAction = new DefaultEditorKit.BeepAction();
     //   FadingUtils.fadeInBalloon(jTooltip, finishedAction, 300, 24);
    }//GEN-LAST:event_formCaretPositionChanged

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        JToolTip jTooltip = this.createToolTip();
        jTooltip.setLocation(10, 10);
        jTooltip.setToolTipText("Uy đang chỉnh sửa");
        jTooltip.setVisible(true);
    }//GEN-LAST:event_formMouseClicked


    Map<String, Caret> caretMap = new HashMap<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
